// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test MyAllUnit goback 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#FFFFFF",
      },
    ]
  }
>
  <View
    style={
      Array [
        undefined,
        Object {
          "justifyContent": "center",
        },
      ]
    }
  >
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        forwardedRef={[Function]}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 10,
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "width": 750,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 10,
                "flex": 1,
                "flexDirection": "column",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "borderBottomWidth": 1,
                  "borderColor": "#E8E8E8",
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "justifyContent": "center",
                  "padding": 16,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "SFProDisplay-Regular",
                      "fontSize": undefined,
                      "lineHeight": undefined,
                      "textAlign": "left",
                      "textDecorationLine": "none",
                    },
                    Object {
                      "color": "#262626",
                      "fontSize": 16,
                      "lineHeight": 24,
                    },
                  ]
                }
              >
                Thêm
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexBasis": "33.33%",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "flex": 1,
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <SvgMock
                      height={43}
                      width={43}
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "marginTop": 10,
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#000",
                          "fontFamily": "SFProDisplay-Regular",
                          "fontSize": undefined,
                          "lineHeight": undefined,
                          "textAlign": "left",
                          "textDecorationLine": "none",
                        },
                        Object {},
                      ]
                    }
                    styles={
                      Object {
                        "color": "#595959",
                        "fontSize": 14,
                        "lineHeight": 30,
                      }
                    }
                  >
                    Thành viên
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </Modal>
    <Modal
      hardwareAccelerated={true}
      onDismiss={[Function]}
      onRequestClose={[Function]}
      onShow={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "portrait-upside-down",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flexDirection": "row",
          },
          Object {
            "backgroundColor": "transparent",
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "justifyContent": "center",
            },
            Object {
              "minWidth": 0,
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
              "paddingLeft": 12,
              "paddingVertical": 0,
            }
          }
          testID="BACK_DEFAULT_TOUCH"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontFamily": "antoutline",
                  "fontSize": 27,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                undefined,
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "SFProDisplay-Bold",
                "fontSize": undefined,
                "lineHeight": undefined,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
              Object {
                "fontSize": 16,
              },
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "justifyContent": "center",
            },
            Object {
              "minWidth": 0,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "paddingLeft": 5,
              "paddingRight": 15,
              "paddingTop": 2,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "flex-end",
                "flexDirection": "row",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "antoutline",
                    "fontSize": 32,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  undefined,
                ]
              }
            >
              
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "flex-end",
                "flexDirection": "row",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "antoutline",
                    "fontSize": 30,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  undefined,
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flex": 1,
      }
    }
    onScroll={[Function]}
    scrollEventThrottle={1}
  >
    <View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          }
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Object {
              "paddingTop": 20,
            }
          }
          onScroll={[Function]}
          scrollEventThrottle={1}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`Test MyAllUnit render MyAllUnit 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "backgroundColor": "#FFFFFF",
      },
    ]
  }
>
  <View
    style={
      Array [
        undefined,
        Object {
          "justifyContent": "center",
        },
      ]
    }
  >
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        forwardedRef={[Function]}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        forwardedRef={[Function]}
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "borderRadius": 10,
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "width": 750,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
                "borderRadius": 10,
                "flex": 1,
                "flexDirection": "column",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "borderBottomWidth": 1,
                  "borderColor": "#E8E8E8",
                  "borderTopLeftRadius": 20,
                  "borderTopRightRadius": 20,
                  "justifyContent": "center",
                  "padding": 16,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "SFProDisplay-Regular",
                      "fontSize": undefined,
                      "lineHeight": undefined,
                      "textAlign": "left",
                      "textDecorationLine": "none",
                    },
                    Object {
                      "color": "#262626",
                      "fontSize": 16,
                      "lineHeight": 24,
                    },
                  ]
                }
              >
                Thêm
              </Text>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": "center",
                  "padding": 16,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexBasis": "33.33%",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "flex": 1,
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        undefined,
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    <SvgMock
                      height={43}
                      width={43}
                    />
                  </View>
                </View>
                <View
                  style={
                    Object {
                      "marginTop": 10,
                    }
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#000",
                          "fontFamily": "SFProDisplay-Regular",
                          "fontSize": undefined,
                          "lineHeight": undefined,
                          "textAlign": "left",
                          "textDecorationLine": "none",
                        },
                        Object {},
                      ]
                    }
                    styles={
                      Object {
                        "color": "#595959",
                        "fontSize": 14,
                        "lineHeight": 30,
                      }
                    }
                  >
                    Thành viên
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </Modal>
    <Modal
      hardwareAccelerated={true}
      onDismiss={[Function]}
      onRequestClose={[Function]}
      onShow={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "portrait-upside-down",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    />
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "flexDirection": "row",
          },
          Object {
            "backgroundColor": "transparent",
          },
        ]
      }
    >
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "justifyContent": "center",
            },
            Object {
              "minWidth": 0,
            },
          ]
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
              "paddingLeft": 12,
              "paddingVertical": 0,
            }
          }
          testID="BACK_DEFAULT_TOUCH"
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontFamily": "antoutline",
                  "fontSize": 27,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                undefined,
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "SFProDisplay-Bold",
                "fontSize": undefined,
                "lineHeight": undefined,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
              Object {
                "fontSize": 16,
              },
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            Object {
              "justifyContent": "center",
            },
            Object {
              "minWidth": 0,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "paddingLeft": 5,
              "paddingRight": 15,
              "paddingTop": 2,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "flex-end",
                "flexDirection": "row",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "antoutline",
                    "fontSize": 32,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  undefined,
                ]
              }
            >
              
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "flex-end",
                "flexDirection": "row",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "antoutline",
                    "fontSize": 30,
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  undefined,
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      Object {
        "flex": 1,
      }
    }
    onScroll={[Function]}
    scrollEventThrottle={1}
  >
    <View>
      <View
        style={
          Object {
            "backgroundColor": "#FFFFFF",
            "flex": 1,
          }
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Object {
              "paddingTop": 20,
            }
          }
          onScroll={[Function]}
          scrollEventThrottle={1}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
