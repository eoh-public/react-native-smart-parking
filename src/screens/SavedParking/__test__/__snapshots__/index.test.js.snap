// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test saved parking container choose tab saved parking container 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "width": "100%",
          "zIndex": 2,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FAFAFA",
            "borderColor": "#BFBFBF",
            "borderWidth": 0.5,
            "height": 88,
            "opacity": 0,
            "position": "absolute",
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": "100%",
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 44,
              "justifyContent": "center",
              "opacity": 1,
              "width": 44,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#262626",
                  "fontFamily": "antoutline",
                  "fontSize": 27,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                undefined,
              ]
            }
          >
            
          </Text>
        </View>
        <View
          styles={
            Object {
              "height": 44,
              "width": 44,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "height": 44,
            "justifyContent": "center",
            "marginRight": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
              Object {
                "translateX": 0,
              },
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "SFProDisplay-Semibold",
                "fontSize": 24,
                "lineHeight": 32,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
              Object {
                "color": "#262626",
                "marginLeft": 16,
                "width": "100%",
              },
            ]
          }
        >
          Đã lưu
        </Text>
      </View>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {
            "paddingBottom": 88,
          },
          undefined,
        ]
      }
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      scrollEventThrottle={16}
      showsVerticalScrollIndicator={false}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "marginBottom": -88,
          "paddingTop": 16,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "flexDirection": "row",
              "marginLeft": 19,
              "marginTop": 16,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 2,
                  "borderColor": "#00979D",
                  "marginRight": 32,
                  "opacity": 1,
                  "paddingVertical": 15,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#595959",
                      "fontFamily": "SFProDisplay-Bold",
                      "fontSize": undefined,
                      "lineHeight": undefined,
                      "textAlign": "left",
                      "textDecorationLine": "none",
                    },
                    Object {
                      "color": "#00979D",
                    },
                  ]
                }
              >
                Mới lưu
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginRight": 32,
                  "opacity": 1,
                  "paddingVertical": 15,
                }
              }
              testID="TAB_HEADER_2"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#595959",
                      "fontFamily": "SFProDisplay-Regular",
                      "fontSize": undefined,
                      "lineHeight": undefined,
                      "textAlign": "left",
                      "textDecorationLine": "none",
                    },
                    Object {},
                  ]
                }
              >
                Gần tôi
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;

exports[`test saved parking container choose tab saved parking container 2`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "width": "100%",
          "zIndex": 2,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FAFAFA",
            "borderColor": "#BFBFBF",
            "borderWidth": 0.5,
            "height": 88,
            "opacity": 0,
            "position": "absolute",
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": "100%",
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 44,
              "justifyContent": "center",
              "opacity": 1,
              "width": 44,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#262626",
                  "fontFamily": "antoutline",
                  "fontSize": 27,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                undefined,
              ]
            }
          >
            
          </Text>
        </View>
        <View
          styles={
            Object {
              "height": 44,
              "width": 44,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "height": 44,
            "justifyContent": "center",
            "marginRight": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
              Object {
                "translateX": 0,
              },
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "SFProDisplay-Semibold",
                "fontSize": 24,
                "lineHeight": 32,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
              Object {
                "color": "#262626",
                "marginLeft": 16,
                "width": "100%",
              },
            ]
          }
        >
          Đã lưu
        </Text>
      </View>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {
            "paddingBottom": 88,
          },
          undefined,
        ]
      }
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      scrollEventThrottle={16}
      showsVerticalScrollIndicator={false}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "marginBottom": -88,
          "paddingTop": 16,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "flexDirection": "row",
              "marginLeft": 19,
              "marginTop": 16,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginRight": 32,
                  "opacity": 1,
                  "paddingVertical": 15,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#595959",
                      "fontFamily": "SFProDisplay-Regular",
                      "fontSize": undefined,
                      "lineHeight": undefined,
                      "textAlign": "left",
                      "textDecorationLine": "none",
                    },
                    Object {},
                  ]
                }
              >
                Mới lưu
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 2,
                  "borderColor": "#00979D",
                  "marginRight": 32,
                  "opacity": 1,
                  "paddingVertical": 15,
                }
              }
              testID="TAB_HEADER_2"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#595959",
                      "fontFamily": "SFProDisplay-Bold",
                      "fontSize": undefined,
                      "lineHeight": undefined,
                      "textAlign": "left",
                      "textDecorationLine": "none",
                    },
                    Object {
                      "color": "#00979D",
                    },
                  ]
                }
              >
                Gần tôi
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;

exports[`test saved parking container render saved parking container 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "transparent",
          "width": "100%",
          "zIndex": 2,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#FAFAFA",
            "borderColor": "#BFBFBF",
            "borderWidth": 0.5,
            "height": 88,
            "opacity": 0,
            "position": "absolute",
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
            "width": "100%",
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": 44,
              "justifyContent": "center",
              "opacity": 1,
              "width": 44,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#262626",
                  "fontFamily": "antoutline",
                  "fontSize": 27,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                undefined,
              ]
            }
          >
            
          </Text>
        </View>
        <View
          styles={
            Object {
              "height": 44,
              "width": 44,
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "backgroundColor": "transparent",
            "height": 44,
            "justifyContent": "center",
            "marginRight": 0,
            "transform": Array [
              Object {
                "translateY": 0,
              },
              Object {
                "translateX": 0,
              },
              Object {
                "scale": 1,
              },
            ],
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "SFProDisplay-Semibold",
                "fontSize": 24,
                "lineHeight": 32,
                "textAlign": "left",
                "textDecorationLine": "none",
              },
              Object {
                "color": "#262626",
                "marginLeft": 16,
                "width": "100%",
              },
            ]
          }
        >
          Đã lưu
        </Text>
      </View>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Array [
          Object {
            "paddingBottom": 88,
          },
          undefined,
        ]
      }
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={true}
        />
      }
      scrollEventThrottle={16}
      showsVerticalScrollIndicator={false}
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "marginBottom": -88,
          "paddingTop": 16,
          "transform": Array [
            Object {
              "translateY": 0,
            },
          ],
        }
      }
    >
      <RCTRefreshControl />
      <View>
        <View
          style={
            Object {
              "backgroundColor": "#FFFFFF",
              "flexDirection": "row",
              "marginLeft": 19,
              "marginTop": 16,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "flex-start",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderBottomWidth": 2,
                  "borderColor": "#00979D",
                  "marginRight": 32,
                  "opacity": 1,
                  "paddingVertical": 15,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#595959",
                      "fontFamily": "SFProDisplay-Bold",
                      "fontSize": undefined,
                      "lineHeight": undefined,
                      "textAlign": "left",
                      "textDecorationLine": "none",
                    },
                    Object {
                      "color": "#00979D",
                    },
                  ]
                }
              >
                Mới lưu
              </Text>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "marginRight": 32,
                  "opacity": 1,
                  "paddingVertical": 15,
                }
              }
              testID="TAB_HEADER_2"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#595959",
                      "fontFamily": "SFProDisplay-Regular",
                      "fontSize": undefined,
                      "lineHeight": undefined,
                      "textAlign": "left",
                      "textDecorationLine": "none",
                    },
                    Object {},
                  ]
                }
              >
                Gần tôi
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;
