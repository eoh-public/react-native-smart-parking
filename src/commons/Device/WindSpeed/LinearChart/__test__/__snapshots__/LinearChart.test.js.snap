// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test LinearChart LinearChart render 1`] = `
<RNSVGSvgView
  bbHeight={300}
  bbWidth="100%"
  focusable={false}
  height={300}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
        "borderWidth": 0,
      },
      true,
      Object {
        "flex": 0,
        "height": 300,
        "width": "100%",
      },
    ]
  }
  width="100%"
>
  <RNSVGGroup>
    <RNSVGGroup
      matrix={
        Array [
          1,
          0,
          -0,
          1,
          -12,
          -12,
        ]
      }
    >
      <RNSVGGroup>
        <RNSVGLine
          fill={0}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={4293454056}
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={1}
          vectorEffect={1}
          x1={50}
          x2={50}
          y1={50}
          y2={250}
        />
        <RNSVGGroup>
          <RNSVGLine
            fill={null}
            propList={
              Array [
                "fill",
                "stroke",
                "strokeDasharray",
              ]
            }
            stroke={4293454056}
            strokeDasharray={
              Array [
                "5",
                "5",
              ]
            }
            vectorEffect={1}
            x1={50}
            x2={700}
            y1={NaN}
            y2={NaN}
          />
          <RNSVGText
            content={null}
            dx={
              Array [
                0,
              ]
            }
            dy={Array []}
            font={Object {}}
            name="axis-tickLabels-0"
            rotate={Array []}
            x={
              Array [
                35,
              ]
            }
            y={
              Array [
                NaN,
              ]
            }
          >
            <RNSVGTSpan
              content="0.000000"
              dx={
                Array [
                  0,
                ]
              }
              dy={
                Array [
                  0,
                ]
              }
              fill={4284045657}
              font={
                Object {
                  "fontFamily": "SFProDisplay-Regular",
                  "fontSize": 10,
                  "letterSpacing": "normal",
                  "textAnchor": "end",
                }
              }
              propList={
                Array [
                  "fill",
                ]
              }
              rotate={Array []}
              x={
                Array [
                  35,
                ]
              }
              y={Array []}
            />
          </RNSVGText>
        </RNSVGGroup>
        <RNSVGGroup>
          <RNSVGLine
            fill={null}
            propList={
              Array [
                "fill",
                "stroke",
                "strokeDasharray",
              ]
            }
            stroke={4293454056}
            strokeDasharray={
              Array [
                "5",
                "5",
              ]
            }
            vectorEffect={1}
            x1={50}
            x2={700}
            y1={NaN}
            y2={NaN}
          />
          <RNSVGText
            content={null}
            dx={
              Array [
                0,
              ]
            }
            dy={Array []}
            font={Object {}}
            name="axis-tickLabels-1"
            rotate={Array []}
            x={
              Array [
                35,
              ]
            }
            y={
              Array [
                NaN,
              ]
            }
          >
            <RNSVGTSpan
              content="NaN"
              dx={
                Array [
                  0,
                ]
              }
              dy={
                Array [
                  0,
                ]
              }
              fill={4284045657}
              font={
                Object {
                  "fontFamily": "SFProDisplay-Regular",
                  "fontSize": 10,
                  "letterSpacing": "normal",
                  "textAnchor": "end",
                }
              }
              propList={
                Array [
                  "fill",
                ]
              }
              rotate={Array []}
              x={
                Array [
                  35,
                ]
              }
              y={Array []}
            />
          </RNSVGText>
        </RNSVGGroup>
      </RNSVGGroup>
      <RNSVGGroup>
        <RNSVGLine
          fill={0}
          propList={
            Array [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={4278190080}
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth={0}
          vectorEffect={1}
          x1={50}
          x2={700}
          y1={250}
          y2={250}
        />
        <RNSVGGroup>
          <RNSVGText
            content={null}
            dx={
              Array [
                0,
              ]
            }
            dy={Array []}
            font={Object {}}
            name="axis-tickLabels-0"
            rotate={Array []}
            x={
              Array [
                700,
              ]
            }
            y={
              Array [
                278.55,
              ]
            }
          >
            <RNSVGTSpan
              content="2017-02-14T12:51:48+00:00"
              dx={
                Array [
                  0,
                ]
              }
              dy={
                Array [
                  0,
                ]
              }
              fill={4284045657}
              font={
                Object {
                  "fontFamily": "SFProDisplay-Regular",
                  "fontSize": 10,
                  "letterSpacing": "normal",
                  "textAnchor": "middle",
                }
              }
              propList={
                Array [
                  "fill",
                ]
              }
              rotate={Array []}
              x={
                Array [
                  700,
                ]
              }
              y={Array []}
            />
          </RNSVGText>
        </RNSVGGroup>
      </RNSVGGroup>
      <RNSVGGroup>
        <RNSVGGroup
          clipPath="victory-clip-1"
        >
          <RNSVGGroup>
            <RNSVGDefs>
              <RNSVGClipPath
                name="victory-clip-1"
              >
                <RNSVGRect
                  height={200}
                  vectorEffect={1}
                  width={650}
                  x={50}
                  y={50}
                />
              </RNSVGClipPath>
            </RNSVGDefs>
          </RNSVGGroup>
          <RNSVGPath
            d="MNaN,NaNCNaN,NaN,NaN,NaN,NaN,NaNCNaN,NaN,NaN,NaN,NaN,NaN"
            fill={0}
            propList={
              Array [
                "fill",
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={4280624421}
            strokeWidth={2}
          />
        </RNSVGGroup>
      </RNSVGGroup>
      <RNSVGGroup>
        <RNSVGGroup>
          <RNSVGPath
            d="M 375, NaN
      m -5, 0
      a 5, 5 0 1,0 10,0
      a 5, 5 0 1,0 -10,0"
            fill={4280624421}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            propList={
              Array [
                "fill",
              ]
            }
            responsible={true}
          />
          <RNSVGGroup />
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGGroup>
  </RNSVGGroup>
</RNSVGSvgView>
`;
